/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_LOGGING_PB_H_INCLUDED
#define PB_LOGGING_PB_H_INCLUDED
#include <pb.h>
// #include "generator/proto/nanopb.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Log_Level {
    Log_Level_DEBUG = 0,
    Log_Level_INFO = 1,
    Log_Level_WARN = 2,
    Log_Level_ERROR = 3
} Log_Level;

/* Struct definitions */
typedef struct _Log {
    Log_Level level;
    char log_message[50];
} Log;


/* Helper constants for enums */
#define _Log_Level_MIN Log_Level_DEBUG
#define _Log_Level_MAX Log_Level_ERROR
#define _Log_Level_ARRAYSIZE ((Log_Level)(Log_Level_ERROR+1))


/* Initializer values for message structs */
#define Log_init_default                         {_Log_Level_MIN, ""}
#define Log_init_zero                            {_Log_Level_MIN, ""}

/* Field tags (for use in manual encoding/decoding) */
#define Log_level_tag                            1
#define Log_log_message_tag                      2

/* Struct field encoding specification for nanopb */
#define Log_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    level,             1) \
X(a, STATIC,   SINGULAR, STRING,   log_message,       2)
#define Log_CALLBACK NULL
#define Log_DEFAULT NULL

extern const pb_msgdesc_t Log_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Log_fields &Log_msg

/* Maximum encoded size of messages (where known) */
#define Log_size                                 53

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
